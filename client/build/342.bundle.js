(self.webpackChunkwp5_starter_react=self.webpackChunkwp5_starter_react||[]).push([[342],{2342:(e,t,n)=>{"use strict";n.r(t);var r=n(2950),a=n.n(r),o=n(2181),s=n.n(o),c=(n(4039),n(8973),n(3379)),l=n.n(c),i=n(1424);l()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var u,p,d=n(6156),m=n(3391),g=n(2465),f=n(5264),b=n(1072),y=n(6620);function v(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?v(Object(n),!0).forEach((function(t){(0,d.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):v(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var E=new b.A({uri:"ws://localhost:4000/",options:{reconnect:!0}}),C=new f.ApolloClient({link:E,uri:"/",cache:new f.InMemoryCache}),w=(0,f.gql)(u||(u=(0,g.Z)(["\n  subscription getMessages {\n    messages {\n      id\n      content\n      user\n    }\n  }\n"]))),O=(0,f.gql)(p||(p=(0,g.Z)(["\n  mutation postMessage($user: String!, $content: String!) {\n    postMessage(user: $user, content: $content)\n  }\n"]))),A=function(e){var t=e.user,n=(0,f.useSubscription)(w).data;return n?a().createElement(a().Fragment,null,n.messages.map((function(e){e.id;var n=e.user,r=e.content;return a().createElement("div",{style:{display:"flex",justifyContent:t===n?"flex-end":"flex-start",paddingBottom:"1em"}},t!==n&&a().createElement("div",{style:{height:50,width:50,marginRight:"0.5em",border:"2px solid #e5e6ea",borderRadius:25,textAlign:"center",fontSize:"18pt",paddingTop:5}},n.slice(0,2).toUpperCase()),a().createElement("div",{style:{background:t===n?"#58bf56":"#e5e6ea",color:t===n?"white":"black",padding:"1em",borderRadius:"1em",maxWidth:"60%"}},r))}))):a().createElement("div",null,"Nothing")},j=function(){var e=(0,r.useState)({user:"Jack",content:""}),t=(0,m.Z)(e,2),n=t[0],o=t[1],s=(0,f.useMutation)(O),c=(0,m.Z)(s,1)[0],l=function(){n.content.length>0&&c({variables:n}),o(h(h({},n),{},{content:""}))};return a().createElement(y.Container,{"data-testid":"chat-app"},a().createElement(A,{user:n.user}),a().createElement(y.Row,null,a().createElement(y.Col,{xs:2,style:{padding:0}},a().createElement(y.FormInput,{label:"User",value:n.user,onChange:function(e){return o(h(h({},n),{},{user:e.target.value}))}})),a().createElement(y.Col,{xs:8},a().createElement(y.FormInput,{"data-testid":"message-input",label:"User",value:n.content,onChange:function(e){return o(h(h({},n),{},{content:e.target.value}))},onKeyUp:function(e){13===e.keyCode&&l()}})),a().createElement(y.Col,{xs:2,style:{padding:0}},a().createElement(y.Button,{onClick:function(){return l()}},"Send"))))};const k=function(){return a().createElement(f.ApolloProvider,{client:C},a().createElement(j,null))};var x=function(){return a().createElement(k,null)};s().render(a().createElement(x,null),document.getElementById("app"))},1424:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c});var r=n(4015),a=n.n(r),o=n(3645),s=n.n(o)()(a());s.push([e.id,"body {\n  font-family: Arial, Helvetica, sans-serif;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;EACE,yCAAyC;AAC3C",sourcesContent:["body {\n  font-family: Arial, Helvetica, sans-serif;\n}"],sourceRoot:""}]);const c=s}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,