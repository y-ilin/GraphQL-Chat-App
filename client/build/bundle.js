(()=>{var e,r,t,n,o,a,l,i,s,u,p,c,d,f,h,v,m,g={5579:(e,r,t)=>{Promise.all([t.e(706),t.e(427),t.e(950),t.e(181),t.e(87),t.e(342)]).then(t.bind(t,2342))}},b={};function y(e){var r=b[e];if(void 0!==r)return r.exports;var t=b[e]={id:e,loaded:!1,exports:{}};return g[e].call(t.exports,t,t.exports,y),t.loaded=!0,t.exports}y.m=g,y.c=b,y.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return y.d(r,{a:r}),r},y.d=(e,r)=>{for(var t in r)y.o(r,t)&&!y.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},y.f={},y.e=e=>Promise.all(Object.keys(y.f).reduce(((r,t)=>(y.f[t](e,r),r)),[])),y.u=e=>e+".bundle.js",y.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),y.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),y.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),e={},r="wp5-starter-react:",y.l=(t,n,o,a)=>{if(e[t])e[t].push(n);else{var l,i;if(void 0!==o)for(var s=document.getElementsByTagName("script"),u=0;u<s.length;u++){var p=s[u];if(p.getAttribute("src")==t||p.getAttribute("data-webpack")==r+o){l=p;break}}l||(i=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,y.nc&&l.setAttribute("nonce",y.nc),l.setAttribute("data-webpack",r+o),l.src=t),e[t]=[n];var c=(r,n)=>{l.onerror=l.onload=null,clearTimeout(d);var o=e[t];if(delete e[t],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(n))),r)return r(n)},d=setTimeout(c.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=c.bind(null,l.onerror),l.onload=c.bind(null,l.onload),i&&document.head.appendChild(l)}},y.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{y.S={};var e={},r={};y.I=(t,n)=>{n||(n=[]);var o=r[t];if(o||(o=r[t]={}),!(n.indexOf(o)>=0)){if(n.push(o),e[t])return e[t];y.o(y.S,t)||(y.S[t]={});var a=y.S[t],l="wp5-starter-react",i=(e,r,t,n)=>{var o=a[e]=a[e]||{},i=o[r];(!i||!i.loaded&&(!n!=!i.eager?n:l>i.from))&&(o[r]={get:t,from:l,eager:!!n})},s=[];switch(t){case"default":i("@apollo/client","3.3.19",(()=>Promise.all([y.e(706),y.e(829),y.e(950),y.e(410)]).then((()=>()=>y(6829))))),i("graphql","15.5.0",(()=>y.e(310).then((()=>()=>y(1310))))),i("react-dom","17.0.2",(()=>Promise.all([y.e(935),y.e(950)]).then((()=>()=>y(3935))))),i("react","17.0.2",(()=>y.e(294).then((()=>()=>y(7294))))),i("shards-react","1.0.3",(()=>Promise.all([y.e(624),y.e(950),y.e(181)]).then((()=>()=>y(1624))))),i("subscriptions-transport-ws","0.9.18",(()=>y.e(313).then((()=>()=>y(5313)))))}return e[t]=s.length?Promise.all(s).then((()=>e[t]=1)):1}}})(),(()=>{var e;y.g.importScripts&&(e=y.g.location+"");var r=y.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),y.p=e})(),t=e=>{var r=e=>e.split(".").map((e=>+e==e?+e:e)),t=/^([^-+]+)?(?:-([^+]+))?(?:\+(.+))?$/.exec(e),n=t[1]?r(t[1]):[];return t[2]&&(n.length++,n.push.apply(n,r(t[2]))),t[3]&&(n.push([]),n.push.apply(n,r(t[3]))),n},n=(e,r)=>{e=t(e),r=t(r);for(var n=0;;){if(n>=e.length)return n<r.length&&"u"!=(typeof r[n])[0];var o=e[n],a=(typeof o)[0];if(n>=r.length)return"u"==a;var l=r[n],i=(typeof l)[0];if(a!=i)return"o"==a&&"n"==i||"s"==i||"u"==a;if("o"!=a&&"u"!=a&&o!=l)return o<l;n++}},o=e=>{var r=e[0],t="";if(1===e.length)return"*";if(r+.5){t+=0==r?">=":-1==r?"<":1==r?"^":2==r?"~":r>0?"=":"!=";for(var n=1,a=1;a<e.length;a++)n--,t+="u"==(typeof(i=e[a]))[0]?"-":(n>0?".":"")+(n=2,i);return t}var l=[];for(a=1;a<e.length;a++){var i=e[a];l.push(0===i?"not("+s()+")":1===i?"("+s()+" || "+s()+")":2===i?l.pop()+" "+l.pop():o(i))}return s();function s(){return l.pop().replace(/^\((.+)\)$/,"$1")}},a=(e,r)=>{if(0 in e){r=t(r);var n=e[0],o=n<0;o&&(n=-n-1);for(var l=0,i=1,s=!0;;i++,l++){var u,p,c=i<e.length?(typeof e[i])[0]:"";if(l>=r.length||"o"==(p=(typeof(u=r[l]))[0]))return!s||("u"==c?i>n&&!o:""==c!=o);if("u"==p){if(!s||"u"!=c)return!1}else if(s)if(c==p)if(i<=n){if(u!=e[i])return!1}else{if(o?u>e[i]:u<e[i])return!1;u!=e[i]&&(s=!1)}else if("s"!=c&&"n"!=c){if(o||i<=n)return!1;s=!1,i--}else{if(i<=n||p<c!=o)return!1;s=!1}else"s"!=c&&"n"!=c&&(s=!1,i--)}}var d=[],f=d.pop.bind(d);for(l=1;l<e.length;l++){var h=e[l];d.push(1==h?f()|f():2==h?f()&f():h?a(h,r):!f())}return!!f()},l=(e,r)=>{var t=e[r];return Object.keys(t).reduce(((e,r)=>!e||!t[e].loaded&&n(e,r)?r:e),0)},i=(e,r,t)=>"Unsatisfied version "+r+" of shared singleton module "+e+" (required "+o(t)+")",s=(e,r,t,n)=>{var o=l(e,t);return a(n,o)||"undefined"!=typeof console&&console.warn&&console.warn(i(t,o,n)),p(e[t][o])},u=(e,r,t)=>{var o=e[r];return(r=Object.keys(o).reduce(((e,r)=>!a(t,r)||e&&!n(e,r)?e:r),0))&&o[r]},p=e=>(e.loaded=1,e.get()),d=(c=e=>function(r,t,n,o){var a=y.I(r);return a&&a.then?a.then(e.bind(e,r,y.S[r],t,n,o)):e(r,y.S[r],t,n,o)})(((e,r,t,n,o)=>r&&y.o(r,t)?s(r,0,t,n):o())),f=c(((e,r,t,n,o)=>{var a=r&&y.o(r,t)&&u(r,t,n);return a?p(a):o()})),h={},v={2950:()=>d("default","react",[1,17,0,2],(()=>y.e(294).then((()=>()=>y(7294))))),2181:()=>d("default","react-dom",[1,17,0,2],(()=>y.e(935).then((()=>()=>y(3935))))),3835:()=>f("default","subscriptions-transport-ws",[2,0,9,18],(()=>y.e(313).then((()=>()=>y(5313))))),5264:()=>f("default","@apollo/client",[1,3,3,19],(()=>Promise.all([y.e(829),y.e(410)]).then((()=>()=>y(6829))))),6620:()=>f("default","shards-react",[1,1,0,3],(()=>Promise.all([y.e(624),y.e(181)]).then((()=>()=>y(1624))))),8410:()=>f("default","graphql",[1,15,5,0],(()=>y.e(310).then((()=>()=>y(1310)))))},m={87:[3835,5264,6620],181:[2181],410:[8410],950:[2950]},y.f.consumes=(e,r)=>{y.o(m,e)&&m[e].forEach((e=>{if(y.o(h,e))return r.push(h[e]);var t=r=>{h[e]=0,y.m[e]=t=>{delete y.c[e],t.exports=r()}},n=r=>{delete h[e],y.m[e]=t=>{throw delete y.c[e],r}};try{var o=v[e]();o.then?r.push(h[e]=o.then(t).catch(n)):t(o)}catch(e){n(e)}}))},(()=>{var e={179:0};y.f.j=(r,t)=>{var n=y.o(e,r)?e[r]:void 0;if(0!==n)if(n)t.push(n[2]);else if(/^(181|410|87|950)$/.test(r))e[r]=0;else{var o=new Promise(((t,o)=>n=e[r]=[t,o]));t.push(n[2]=o);var a=y.p+y.u(r),l=new Error;y.l(a,(t=>{if(y.o(e,r)&&(0!==(n=e[r])&&(e[r]=void 0),n)){var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;l.message="Loading chunk "+r+" failed.\n("+o+": "+a+")",l.name="ChunkLoadError",l.type=o,l.request=a,n[1](l)}}),"chunk-"+r,r)}};var r=(r,t)=>{var n,o,[a,l,i]=t,s=0;for(n in l)y.o(l,n)&&(y.m[n]=l[n]);for(i&&i(y),r&&r(t);s<a.length;s++)o=a[s],y.o(e,o)&&e[o]&&e[o][0](),e[a[s]]=0},t=self.webpackChunkwp5_starter_react=self.webpackChunkwp5_starter_react||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})(),y(5579)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,